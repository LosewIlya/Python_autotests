{"name": "test_positive_visit", "status": "failed", "statusDetails": {"message": "AssertionError: Текст не совпадает! Ожидалось: 'Example Domain', получено: 'Связаться со мной\n  Email: losew.ilya2011@yandex.by'\nassert 'Example Domain' in 'Связаться со мной\\nEmail: losew.ilya2011@yandex.by'", "trace": "self = <test_my_sait.TestPageText object at 0x000002BF36B60CD0>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d4b5a13dd559f6394c2766ae75631301\")>\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"d4b5a13dd559f6394c2766ae75631301\")>\n\n     def test_positive_visit(self, setup, browser):\n        \"\"\"\n        Test case POC-1\n        \"\"\"\n    \t# Описываем опции запуска браузера\n        chrome_options = Options()\n        chrome_options.add_argument(\"start-maximized\") # открываем на полный экран\n        chrome_options.add_argument(\"--disable-infobars\") # отключаем инфо сообщения\n        chrome_options.add_argument(\"--disable-extensions\") # отключаем расширения\n        chrome_options.add_argument(\"--disable-search-engine-choice-screen\") # отключаем выбор движка для поиска\n        # chrome_options.add_argument(\"--headless\") # спец. режим \"без браузера\"\n    \n    \t# устанавливаем webdriver в соответствии с версией используемого браузера\n        service = Service()\n        # запускаем браузер с указанными выше настройками\n        driver = webdriver.Chrome(service=service, options=chrome_options)\n    \n        browser = setup\n        browser.get('https://losewilya.github.io/')  # Замени на свой URL\n    \n            # Ищем элемент по CSS-селектору (например, заголовок h1)\n        element = browser.find_element(by=By.CSS_SELECTOR, value='[class=\"contact\"]')\n        actual_text = element.text\n    \n            # Проверяем, что текст соответствует ожидаемому\n        expected_text = \"Example Domain\"  # Замени на свой ожидаемый текст\n>       assert expected_text in actual_text, \\\n        f\"Текст не совпадает! Ожидалось: '{expected_text}', получено: '{actual_text}'\"\nE       AssertionError: Текст не совпадает! Ожидалось: 'Example Domain', получено: 'Связаться со мной\nE         Email: losew.ilya2011@yandex.by'\nE       assert 'Example Domain' in 'Связаться со мной\\nEmail: losew.ilya2011@yandex.by'\n\ntests\\web\\test_my_sait.py:40: AssertionError"}, "description": "\nTest case POC-1\n", "start": 1745833217864, "stop": 1745833220569, "uuid": "e151097b-fccb-4a1d-a10a-4a0133f941e3", "historyId": "0e3f514f4d40b02859f74017ba07e82e", "testCaseId": "0e3f514f4d40b02859f74017ba07e82e", "fullName": "tests.web.test_my_sait.TestPageText#test_positive_visit", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "parentSuite", "value": "tests.web"}, {"name": "suite", "value": "test_my_sait"}, {"name": "subSuite", "value": "TestPageText"}, {"name": "host", "value": "DESKTOP-CR423FO"}, {"name": "thread", "value": "6096-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.web.test_my_sait"}]}